akka {
  loglevel = WARNING

  actor {
    provider = cluster

    serialization-bindings {
      "sample.persistence.multidc.CborSerializer" = jackson-cbor
    }
  }

  # For the sample, just bind to loopback and do not allow access from the network
  # the port is overridden by the logic in main class
  remote.artery {
    canonical.port = 0
    canonical.hostname = 127.0.0.1
  }

  cluster {
    seed-nodes = [
      "akka://ClusterSystem@127.0.0.1:2551",
      "akka://ClusterSystem@127.0.0.1:2552"]

    # Needed when running many actor systems in the same JVM
    jmx.multi-mbeans-in-same-jvm = on

    downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"

    multi-data-center {
      self-data-center = "eu-west"
    }
  }

  persistence {
    journal.plugin = "akka.persistence.cassandra.journal"
    snapshot-store.plugin = "akka.persistence.cassandra.snapshot"


    cassandra {
      compatibility.cosmosdb = on
      events-by-tag.gc-grace-seconds = 0
      journal {
        gc-grace-seconds = 0
        keyspace-autocreate = true
        tables-autocreate = true
      }
      snapshot {
        gc-grace-seconds = 0
        keyspace-autocreate = true
        tables-autocreate = true
      }
    }
  }

}

datastax-java-driver {
  basic.contact-points = ["<Endpoint or IP>:10350"]
  basic.load-balancing-policy.local-datacenter = "<Region>"
  basic.request.timeout = 10 seconds

  profiles.akka-persistence-cassandra-profile.basic.request.consistency = QUORUM

  advanced.reconnect-on-init = true
  advanced.ssl-engine-factory.class = DefaultSslEngineFactory
  hostname-validation = false
  advanced.auth-provider {
    class = PlainTextAuthProvider
    username = "cassandraeastustest"
    password = "CosmosDBPwd"
  }
}


# Akka Management config: https://developer.lightbend.com/docs/akka-management/current/index.html
akka.management {
  http.hostname = "127.0.0.1"
  http.port = 19999
}
